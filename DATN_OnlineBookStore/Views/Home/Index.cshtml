@{
    ViewData["Title"] = "Home Page";
}
@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<DATN_OnlineBookStore.Models.TblSanpham>

<div class="product-container">
    @foreach (var item in Model)
    {
        <div class="product-card">
            <a href="@Url.Action("ProductDetails", "Home", new { id = item.PkISanphamId })">
                <div class="product-image">
                    <img src="@item.SHinhanh" alt="@item.STensanpham" />
                </div>
                <div class="product-info">
                    <h3 class="product-title">@item.STensanpham</h3>
                    <p class="product-description">@item.FGiaban</p>
                    @if (ViewBag.ProductRatings != null && ViewBag.ProductRatings.ContainsKey(item.PkISanphamId))
                    {
                        var averageRating = ViewBag.ProductRatings[item.PkISanphamId];
                        <div class="product-rating">
                            @for (int i = 0; i < 5; i++)
                            {
                                <i class="fa @(i < averageRating ? "fa-star" : "fa-star-o")"></i>
                            }
                        </div>
                    }
                </div>
            </a>
        </div>
    }
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
</div>

@if (ViewBag.Recommendations != null && ViewBag.Recommendations.Count > 0)
{
    <h2>Gợi ý cho bạn</h2>
    <div class="product-container">
        @foreach (var item in ViewBag.Recommendations)
        {
            <div class="product-card">
                <a href="@Url.Action("ProductDetails", "Home", new { id = item.PkISanphamId })">
                    <div class="product-image">
                        <img src="@item.SHinhanh" alt="@item.STensanpham" />
                    </div>
                    <div class="product-info">
                        <h3 class="product-title">@item.STensanpham</h3>
                        <p class="product-description">@item.FGiaban</p>
                        @if (ViewBag.ProductRatings != null && ViewBag.ProductRatings.ContainsKey(item.PkISanphamId))
                        {
                            var averageRating = ViewBag.ProductRatings[item.PkISanphamId];
                            <div class="product-rating">
                                @for (int i = 0; i < 5; i++)
                                {
                                    <i class="fa @(i < averageRating ? "fa-star" : "fa-star-o")"></i>
                                }
                            </div>
                        }
                    </div>
                </a>
            </div>
        }
    </div>
}

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f5f5f5;
        margin: 0;
        padding: 0;
    }

    .product-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 16px;
        padding: 16px;
        max-width: 1200px;
        margin: 0 auto;
    }

    .product-rating {
        display: flex;
        align-items: center;
    }

        .product-rating i {
            color: #FFD700;
            margin-right: 2px;
        }

    .product-card {
        background-color: #fff;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
    }

        .product-card:hover {
            transform: translateY(-5px);
        }

    .product-image img {
        width: 100%;
        height: auto;
    }

    .product-info {
        padding: 16px;
    }

    .product-title {
        font-size: 18px;
        margin: 0 0 8px;
        color: #333;
    }

    .product-meta, .product-description, .product-quantity, .product-category {
        margin: 4px 0;
        font-size: 14px;
        color: #666;
    }

    .product-meta {
        font-size: 12px;
        color: #999;
    }
</style>
